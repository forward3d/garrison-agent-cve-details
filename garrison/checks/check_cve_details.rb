module Garrison
  module Checks
    class CheckCveDetails < Check

      def settings
        self.source ||= 'cve-details'
        self.family ||= 'software'
        self.type   ||= 'security'
      end

      def perform
        response = HTTParty.get(build_url)
        response.each do |cve|
          alert(
            name: 'CVE',
            external_severity: CveHelper.cvss_score_to_severity(cve['cvss_score']),
            target: "#{options[:vendor_name]}/#{options[:product_name]}",
            detail: cve['cve_id'],
            finding: cve.to_json,
            finding_id: cve['cve_id'].downcase,
            urls: [
              {
                name: 'CVE Details',
                url: cve['url']
              },
              {
                name: 'NIST',
                url: File.join('https://nvd.nist.gov/vuln/detail', cve['cve_id'])
              }
            ],
            key_values: [
              {
                key: 'cve',
                value: cve['cve_id']
              }
            ]
          )
        end
      end

      private

      def build_url
        hash = {
          numrows: 30,
          vendor_id: options[:vendor_id],
          product_id: options[:product_id],
          version_id: 0,
          order_by: 3
        }
        uri = URI::HTTPS.build(host: 'www.cvedetails.com', path: '/json-feed.php', query: URI.encode_www_form(hash))
        Logging.debug uri.to_s
        uri
      end
    end
  end
end
